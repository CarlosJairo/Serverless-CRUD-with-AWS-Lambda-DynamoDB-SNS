# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: lambdausers
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: lambda-users-app
# "service" is the name of this project. This will also be added to your AWS resource names.
service: lambda-users

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
        - sns:Publish
        - ssm:GetParameter
        - ssm:GetParameters
      Resource:
        - arn:aws:dynamodb:us-east-1:861276089505:table/UserTable
        - arn:aws:sns:us-east-1:861276089505:snsusers
        - arn:aws:ssm:us-east-1:861276089505:parameter/dev/*

functions:
  hello:
    handler: src/hello.hello
    events:
      - httpApi:
          path: /
          method: get
  create:
    handler: src/addUser.addUser
    events:
      - httpApi:
          path: /users
          method: post
    environment:
      TABLE_NAME: ${ssm:/dev/table_name}
  getUsers:
    handler: src/getUsers.getUsers
    events:
      - httpApi:
          path: /users
          method: get
    environment:
      TABLE_NAME: ${ssm:/dev/table_name}
  getUser:
    handler: src/getUser.getUser
    events:
      - httpApi:
          path: /user/{id}
          method: get
    environment:
      TABLE_NAME: ${ssm:/dev/table_name}
  updateUser:
    handler: src/updateUser.updateUser
    events:
      - httpApi:
          path: /user/{id}
          method: put
    environment:
      TABLE_NAME: ${ssm:/dev/table_name}
  deleteUser:
    handler: src/deleteUser.deleteUser
    events:
      - httpApi:
          path: /user/{id}
          method: delete
    environment:
      TABLE_NAME: ${ssm:/dev/table_name}
  sendEmail:
    handler: src/sendEmail.sendEmail
    events:
      - httpApi:
          path: /send-email
          method: post
    environment:
      SNS_TOPIC_ARN: ${ssm:/dev/sns_topic_arn}
  getToken:
    handler: src/getToken.getToken
    events:
      - httpApi:
          path: /get-token
          method: get

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${ssm:/dev/table_name}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
